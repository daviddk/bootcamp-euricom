!function(e){"use strict";e.module("userApp",["controllers","ui.router","ui.bootstrap","ngResource","ngSanitize","toaster","ngRoute","ngMessages"]).constant("CONFIG",{urlBase:"/api",timeout:5e3,pageSize:10}).config(["$stateProvider","$urlRouterProvider",function(e,r){e.state("alert",{url:"/alert",templateUrl:"../alert.html",controller:"userController",controllerAs:"vm",resolve:{users:["userService",function(e){return e.getUsers()}]}}).state("list",{url:"/list",templateUrl:"../list.html",controller:"userController",controllerAs:"vm",resolve:{users:["userService",function(e){return e.getUsers()}]}}).state("add",{url:"/add",templateUrl:"../edit.html",controller:"editUser",controllerAs:"vm"}).state("edit",{url:"/edit/:userid?",templateUrl:"../edit.html",controller:"editUser",controllerAs:"vm"}),r.otherwise("list")}]).factory("_",["$window",function(e){return e._}]).factory("logInterceptor",["$q","toaster",function(e,r){return{request:function(r){return e.when(r)}}}]).factory("errorInterceptor",["$q","toaster",function(e,r){return{responseError:function(r){return e.reject(r)}}}]).config(["$httpProvider",function(e){e.interceptors.push("logInterceptor"),e.interceptors.push("errorInterceptor")}])}(angular),function(e){"use strict";function r(e,r,t,n){function o(){n.getUser(e.userid).then(function(e){u.user=e})}function s(e){e&&(t.myForm.submitting=!0,r.info(u.user.name),r.info(u.user.age),n.saveUser(u.user).then(function(e){u.user=e}))}var u=this;u.submit=s,u.user={},u.message="Adding new user",e.userid&&(o(),u.message="Edit user: "+e.userid)}function t(e,r,t,n,o){function s(){i.users=o}function u(){i.counter=10,r(function(){i.counter--,0==i.counter&&i.showAlert()},1e3,i.counter)}var i=this;i.users=[],i.message="User table",i.orderByField="name",i.reverseSort=!1,i.page=1,i.sort="",i.alert="Apollo has been launched succesfully.",i.showAlerts=!1,i.counter="Waiting for launch codes...",i.countDown=u,i.text="Test: <script>window.alert('hello')</script>",s(),i.showAlert=function(){i.showAlerts=!i.showAlerts},i.deleteUser=function(r){console.log("deleting",r.id),userService.deleteUser(r).then(function(t){i.users=e.without(i.users,r)})},i.loadMore=function(){i.page+=1,userService.getUsers(i.page,i.sort).then(function(e){console.log(e),i.users=i.users.concat(e)})["catch"](function(e){})}}e.module("controllers",[]).controller("userController",t).controller("editUser",r),r.$inject=["$stateParams","$log","$scope","userService"],t.$inject=["_","$interval","$log","$filter","users"]}(angular),function(e){"use strict";e.module("userApp").filter("toUpper",function(){return function(e,r){return e=r?e.toUpperCase():e.toLowerCase()}}).filter("gmailFilter",function(e){return function(e){return _.filter(e,function(e){return-1!==e.email.indexOf("gmail")})}})}(angular),function(e){"use strict";function r(e,r,t){console.log();var n=t("api/users/:id",{id:"@id"},{update:{method:"PUT"}});this.saveUser=function(e){return e.id?n.update(e).$promise.then(function(e){return e}):n.save(e).$promise.then(function(e){return e})},this.getUser=function(e){return n.get({id:e}).$promise.then(function(e){return e})},this.getUsers=function(e,r){return n.query().$promise.then(function(e){return e})},this.deleteUser=function(e){return n.remove(e).$promise}}e.module("userApp").service("userService",r),r.$inject=["$http","CONFIG","$resource"]}(angular),function(e){"use strict";e.module("app.controllers",[])}(angular);